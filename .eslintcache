[{"/home/rohan/Desktop/cf/src/index.js":"1","/home/rohan/Desktop/cf/src/reportWebVitals.js":"2","/home/rohan/Desktop/cf/src/components/App.jsx":"3","/home/rohan/Desktop/cf/src/components/HandleData.jsx":"4","/home/rohan/Desktop/cf/src/components/CharacterWise.jsx":"5","/home/rohan/Desktop/cf/src/components/DifficultyWise.jsx":"6","/home/rohan/Desktop/cf/src/components/TagWise.jsx":"7","/home/rohan/Desktop/cf/src/components/VerdictWise.jsx":"8","/home/rohan/Desktop/cf/src/components/LanguageWise.jsx":"9","/home/rohan/Desktop/cf/src/components/RatingGraph.jsx":"10","/home/rohan/Desktop/cf/src/components/temp.jsx":"11","/home/rohan/Desktop/cf/src/components/Sorting.jsx":"12","/home/rohan/Desktop/cf/src/components/UserData.jsx":"13","/home/rohan/Desktop/cf/src/components/HeatMap.jsx":"14"},{"size":511,"mtime":1610091530245,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610088951329,"results":"17","hashOfConfig":"16"},{"size":1562,"mtime":1610519227584,"results":"18","hashOfConfig":"16"},{"size":7916,"mtime":1610519265913,"results":"19","hashOfConfig":"16"},{"size":2917,"mtime":1610514124127,"results":"20","hashOfConfig":"16"},{"size":1649,"mtime":1610514134453,"results":"21","hashOfConfig":"16"},{"size":946,"mtime":1610514080388,"results":"22","hashOfConfig":"16"},{"size":2100,"mtime":1610513941141,"results":"23","hashOfConfig":"16"},{"size":900,"mtime":1610514056465,"results":"24","hashOfConfig":"16"},{"size":1910,"mtime":1610514106151,"results":"25","hashOfConfig":"16"},{"size":85,"mtime":1610460030748,"results":"26","hashOfConfig":"16"},{"size":1402,"mtime":1610381342076,"results":"27","hashOfConfig":"16"},{"size":4355,"mtime":1610514466229,"results":"28","hashOfConfig":"16"},{"size":1802,"mtime":1610520207322,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"tq6spo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rohan/Desktop/cf/src/index.js",[],["68","69"],"/home/rohan/Desktop/cf/src/reportWebVitals.js",[],"/home/rohan/Desktop/cf/src/components/App.jsx",["70"],"/home/rohan/Desktop/cf/src/components/HandleData.jsx",["71","72"],"/home/rohan/Desktop/cf/src/components/CharacterWise.jsx",["73","74","75","76","77","78","79","80","81","82","83","84"],"import React from \"react\";\nimport { XYPlot, XAxis, YAxis, makeWidthFlexible, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries, LineMarkSeries, VerticalBarSeries, HorizontalBarSeries } from 'react-vis';\nimport { Chart } from \"react-google-charts\";\nimport $ from \"jquery\";\n\nfunction CharacterWise(props) {\n\n    console.log(\"In function Character wise\");\n\n    var data = [[\"Level\", \"Solved\"]];\n    Object.keys(props.problemChar).map(function (key) {\n        data.push([key, props.problemChar[key]]);\n    });\n\n    var width = Math.max((Math.floor((data.length - 28) * (700 / 15) + 1500)), $(\".character-graph\").width());\n    //console.log(width);\n\n    return (\n        <div className=\"character-graph\">\n            <Chart\n                width={width}\n                height={'275px'}\n                chartType=\"ColumnChart\"\n                loader={<div>Loading Chart</div>}\n                data={data}\n                options={{\n                    title: \"Problem Level\",\n                    chartArea: {\n                        width: '80%'\n                    },\n                    chart: {\n                        title: 'Difficulty wise problems',\n                        subtitle: 'The bars show to total no. of problems solved as per difficulty',\n                    },\n                    colors: ['rgb(2, 2, 140)'],\n                    legend: { position: 'none' },\n                    bar: { groupWidth: \"55%\" },\n\n                }}\n                // For tests\n                rootProps={{ 'data-testid': '2' }}\n            />\n        </div>\n    );\n\n\n}\n\nexport default CharacterWise;\n\n\n\n// import React from \"react\";\n// import { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries, LineMarkSeries, VerticalBarSeries, HorizontalBarSeries } from 'react-vis';\n\n// function buildValue(hoveredCell) {\n//     const {radius, angle, angle0} = hoveredCell;\n//     const truedAngle = (angle + angle0) / 2;\n//     return {\n//       x: radius * Math.cos(truedAngle),\n//       y: radius * Math.sin(truedAngle)\n//     };\n//   }\n\n// function Example(props) {\n\n//     var ratingData = props.userRatings.map(item => (\n//         {\n//             x: item.contestId,\n//             y: item.newRating\n//         }\n//     ));\n\n//     return (\n//         <XYPlot\n//             xType=\"ordinal\"\n//             width={1000}\n//             height={250}>\n//             <VerticalGridLines />\n//             <HorizontalGridLines />\n//             <XAxis title=\"Contest ID\" />\n//             <YAxis title=\"Rating\" />\n//             <LineMarkSeries\n//                 color={\"blue\"}\n//                 fill={\"black\"}\n//                 size={3}\n//                 data={ratingData}\n//                 onValueMouseOver={(datapoint, event) => {\n//                     alert(datapoint);   \n//                 }}\n//             />\n//         </XYPlot>\n//     );\n// }\n// export default Example;\n","/home/rohan/Desktop/cf/src/components/DifficultyWise.jsx",["85","86","87","88","89","90","91","92","93","94","95","96"],"import React from \"react\";\nimport { XYPlot, XAxis, YAxis, makeWidthFlexible, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries, LineMarkSeries, VerticalBarSeries, HorizontalBarSeries } from 'react-vis';\nimport { Chart } from \"react-google-charts\";\nimport $ from \"jquery\";\n\nfunction DifficultyWise(props) {\n\n    console.log(\"In function Difficulty wise\");\n\n    var data = [[\"Level\", \"Solved\"]];\n    Object.keys(props.problemDifficulty).map(function (key) {\n        data.push([key, props.problemDifficulty[key]]);\n    });\n\n\n    var width = Math.max((Math.floor((data.length - 28) * (700 / 15) + 1500)), $(\".difficulty-chart\").width());\n\n    //console.log();\n    //console.log(width);\n    return (\n        <div className=\"difficulty-chart\">\n            <Chart\n                width={width}\n                height={'275px'}\n                chartType=\"ColumnChart\"\n                loader={<div>Loading Chart</div>}\n                data={data}\n                options={{\n                    title: \"Problems Difficulty\",\n                    chartArea: {\n                        width: '80%'\n                    },\n                    chart: {\n                        title: 'Difficulty wise problems',\n                        subtitle: 'The bars show to total no. of problems solved as per difficulty',\n                    },\n                    colors: ['rgb(2, 2, 140)'],\n                    legend: { position: 'none' },\n                    bar: { groupWidth: \"55%\" },\n\n                }}\n                // For tests\n                rootProps={{ 'data-testid': '2' }}\n            />\n        </div>\n    );\n}\n\nexport default DifficultyWise;","/home/rohan/Desktop/cf/src/components/TagWise.jsx",["97"],"import React from \"react\";\n\nimport { Chart } from \"react-google-charts\";\n\nfunction TagWise(props) {\n\n    console.log(\"In function Tag wise\");\n\n    var data = [[\"Tags\", \"Solved problems\", {role: \"style\"}]];\n    Object.keys(props.problemTags).map(function (key, index) {\n        data.push([key, props.problemTags[key], '#b87333']);\n    });\n\n    //data = [data[0], data.slice(1,).reverse()];\n\n    return (\n        <div className=\"tag-graph\">\n            <Chart\n                width={'100%'}\n                height={'400px'}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={data}\n                options={{\n                    title: 'Problem Tags',\n                    pieSliceText: 'none',\n                    pieHole: 0.5,\n                }}\n                // For tests\n                rootProps={{ 'data-testid': '1' }}\n            />\n        </div>\n\n    );\n}\n\nexport default TagWise;","/home/rohan/Desktop/cf/src/components/VerdictWise.jsx",["98","99"],"import React from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nfunction swap(a, b){\n    return [b, a];\n}\n\nconst verdict = {\n    \"OK\": {\n        \"term\": \"Accepted\",\n        \"color\": \"#207d1a\"\n    },\n    \"TIME_LIMIT_EXCEEDED\": {\n        \"term\": \"TLE\",\n        \"color\": \"#eb540e\"\n    },\n    \"MEMORY_LIMIT_EXCEEDED\": {\n        \"term\": \"MLE\",\n        \"color\": \"#2c4a94\"\n    },\n    \"IDLENESS_LIMIT_EXCEEDED\": {\n        \"term\": \"IDLE\",\n        \"color\": \"#0c827c\"\n    },\n    \"RUNTIME_ERROR\": {\n        \"term\": \"Runtime error\",\n        \"color\": \"#d6660b\"\n    },\n    \"COMPILATION_ERROR\": {\n        \"term\": \"Compilation Error\",\n        \"color\": \"#d2e038\"\n    },\n    \"WRONG_ANSWER\": {\n        \"term\": \"Wrong Answer\",\n        \"color\": \"#d90b0b\"\n    }\n};\n\nfunction VerdictWise(props) {\n    var data = [[\"Tags\", \"Solved problems\"]];\n    var colors = [];\n    Object.keys(props.problemVerdicts).map(function (key, index) {\n        if (key in verdict) {\n            data.push([verdict[key].term, props.problemVerdicts[key]]);\n            colors.push({color: verdict[key].color});\n        }\n\n    });\n    // for(var i=1;i<data.length;i++){\n    //     if(data[i][0] === \"OK\"){\n    //         data[1] = [data[i], data[1] = data[i]][0];\n    //         colors[0] = [colors[i-1], colors[0] = colors[i-1]][0];\n    //     }\n    //     if(data[i][0] === \"Wrong Answer\"){\n    //         // [data[2], data[i]] = [data[i], data[2]];\n    //         //[colors[1], colors[i-1]] = [colors[i-1], colors[1]];\n    //     }\n    // }\n\n    //console.log(colors)\n\n    return (\n        <div className=\"verdict-graph\">\n            <Chart\n                width={'100%'}\n                height={'400px'}\n                chartType=\"PieChart\"\n                loader={<div>Loading Chart</div>}\n                data={data}\n                options={{\n                    legend: 'none',\n                    title: 'Problem Verdicts',\n                    is3D: true,\n                    slices: colors\n                }}\n                rootProps={{ 'data-testid': '1' }}\n            />\n        </div>\n\n    );\n}\n\nexport default VerdictWise;\n\n","/home/rohan/Desktop/cf/src/components/LanguageWise.jsx",["100"],"import React from \"react\";\nimport { XYPlot, RadialChart } from \"react-vis\";\n\nfunction LanguageWise(props) {\n\n    console.log(\"In function Language wise\");\n\n    var languageData = Object.keys(props.problemLanguages).map(function (key) {\n        return {\n            \"angle\": props.problemLanguages[key],\n            \"label\": key,\n        }\n    });\n\n    //console.log(languageData.length);\n    \n    return (\n        <ul>\n\n            <RadialChart\n                data={languageData}\n                width={300}\n                height={300}\n                showLabels={true} />\n\n\n            <li>Total Submissions: {props.totalSubmissions}</li>\n            {\n                Object.keys(props.problemLanguages).map((key, index) => (\n                    <p key={index}> Problem {key}: {props.problemLanguages[key]}</p>\n                ))\n            }\n        </ul>\n    );\n}\n\nexport default LanguageWise;","/home/rohan/Desktop/cf/src/components/RatingGraph.jsx",["101"],"import React from 'react';\nimport { Chart } from 'react-google-charts';\n\n\nfunction FindMaxRating(data){\n    var index = 0;\n    var maxRating = 0;\n    for(var i=0; i< data.length;i++){\n        if( maxRating < data[i].newRating ) {\n            maxRating = data[i].newRating\n            index = i;\n        }\n    }\n    return [maxRating, index];\n}\n\nfunction RatingGraph(props) {\n\n    console.log(\"In function Rating graph\");\n    \n    var ratingData = props.userRatings.slice(-100,);\n    var data = [[\"x\", \"Rating\", {'type': 'string', 'role': 'style'}]];\n\n    var [maxRating, maxRatingIndex] = FindMaxRating(ratingData);\n    var i = 0;\n\n    //console.log(maxRating, maxRatingIndex);\n\n    ratingData.forEach(function (item) {\n        if( i === maxRatingIndex){\n            data.push([item.contestId.toString(), item.newRating, 'point { size: 4; fill-color: #0a0a0a; }']);\n        } else {\n            data.push([item.contestId.toString(), item.newRating, null]);\n        }\n        i += 1;\n    });\n\n    var title = \"Contest rating in last \" + ratingData.length + \" contests\";\n    return (\n        <div className=\"rating-graph\">\n            <Chart\n                width={'100%'}\n                height={'300px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={data}\n                options={{\n                    title: title,\n                    // hAxis: {\n                    //     title: 'ContestID',\n                    // },\n                    // vAxis: {\n                    //     title: 'Rating',\n                    // },\n                    pointSize: 4,\n                    pointShape: \"circle\",\n                    colors:[\"rgb(2, 2, 140)\"],\n                    legend: { position: 'none' },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n            />\n        </div>\n        //}\n    );\n}\n\nexport default RatingGraph;","/home/rohan/Desktop/cf/src/components/temp.jsx",["102","103","104"],"/home/rohan/Desktop/cf/src/components/Sorting.jsx",["105","106","107","108"],"import React from \"react\";\n\nclass Sorting extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var dict = {};\n        for (var i = 800; i <= 3400; i += 100) {\n            dict[i] = false;\n        }\n        this.state = { dict };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"https://codeforces.com/api/problemset.problems\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(\"here\");\n                    setUserRating(result[\"result\"]);\n                    setIsLoadedRating(true);\n                },\n                (error) => {\n                    setIsLoadedRating(true);\n                    setError(error);\n                }\n            )\n    }\n\n    handleChange(event) {\n        var tempDict = this.state;\n        if (tempDict[event.target.name] === true) {\n            tempDict[event.target.name] = false;\n        } else {\n            tempDict[event.target.name] = true;\n        }\n        this.setState(tempDict);\n        console.log(this.state)\n    }\n    render() {\n        console.log(this.state);\n        return (\n            <div>\n                <input type=\"checkbox\" id=\"vehicle1\" name={800} onChange={this.handleChange} />\n                <label for=\"800\">800</label>\n            </div>\n        );\n    }\n}\n\nexport default Sorting;\n",["109","110"],"/home/rohan/Desktop/cf/src/components/UserData.jsx",["111","112","113"],"import React from \"react\";\nimport { unmountComponentAtNode } from \"react-dom\";\n\n\n//Sort a dictionery on values\nfunction sortOnValues(dict) {\n    var items = Object.keys(dict).map(function (key) {\n        return [key, dict[key]];\n    });\n    var tempDict = {};\n    // Sort the array based on the second element\n    items.sort(function (first, second) {\n        return second[1] - first[1];\n    });\n\n    items.forEach(function (item) {\n        tempDict[item[0]] = item[1];\n    });\n    return tempDict;\n}\n\n//sort a dictionery by it's keys\nfunction sortOnKeys(dict) {\n    var sorted = [];\n    for (var key in dict) {\n        sorted[sorted.length] = key;\n    }\n    sorted.sort();\n    var tempDict = {};\n    for (var i = 0; i < sorted.length; i++) {\n        tempDict[sorted[i]] = dict[sorted[i]];\n    }\n    return tempDict;\n}\n\nfunction contestNumbers(contests) {\n    var maxUp = 0;\n    var maxDown = 0;\n    var bestRank = 200000000;\n\n    for (var i = 0; i < contests.length; i++) {\n        if (i !== 0) {\n            if (contests[i].newRating - contests[i].oldRating > maxUp) {\n                maxUp = contests[i].newRating - contests[i].oldRating;\n            }\n            if (-contests[i].newRating + contests[i].oldRating > maxDown) {\n                maxDown = -contests[i].newRating + contests[i].oldRating;\n            }\n            if (bestRank > contests[i].rank) {\n                bestRank = contests[i].rank\n            }\n        }\n    }\n\n    return [maxUp, maxDown, bestRank];\n}\n\nfunction problemNumbers(data) {\n    var tried = 0;\n    var onOneSubmission = 0;\n    var solved = 0;\n\n    var problemDict = {};\n\n    for (var i = 0; i < data.length; i++) {\n        if (data[i].problem.name in problemDict) {\n            problemDict[data[i].problem.name].tried++;\n            if (data[i].verdict === \"OK\") {\n                problemDict[data[i].problem.name].solved++;\n            }\n\n        } else {\n            problemDict[data[i].problem.name] = {\n                \"tried\": 1,\n                \"solved\": 0,    \n            }\n            if (data[i].verdict === \"OK\") {\n                problemDict[data[i].problem.name].solved++;\n            }\n        }\n    }\n\n    Object.keys(problemDict).forEach(function (item) {\n        tried++;\n        if (problemDict[item].solved !== 0) {\n            solved++;\n        }\n        if (problemDict[item].solved === problemDict[item].tried) {\n            onOneSubmission++;\n        }\n    });\n\n    return [tried, solved, onOneSubmission];\n}\n\n\nfunction UserData(data) {\n\n    console.log(\"In function userdata\");\n\n    if (data.contests === 0) {\n        return (<p>No Contests!!</p>)\n    }\n\n    var allSubmissions = data.allSubmissions;\n    var uniqueCorrectSubmission = data.uniqueCorrectSubmission;\n    var totalSubmissions = allSubmissions.length;\n    var solvedProblems = uniqueCorrectSubmission.length;\n\n    var [tried, solved, onOneSubmission] = problemNumbers(allSubmissions)\n    var avgAttempts = (totalSubmissions / solvedProblems).toFixed(2);\n\n    var contests = data.contests;\n\n    var totalContests = contests.length;\n    var [maxUp, maxDown, bestRank] = contestNumbers(contests);\n\n    const noEndBorder = { borderRight: \"none\" };\n\n    return (\n        <div className=\"user-data\">\n            <div className=\"row\">\n                <div className=\"col-lg-3\">\n                    <p>Tried: {tried}</p>\n                </div>\n                <div className=\"col-lg-3\">\n                    <p>Solved: {solved}</p>\n                </div>\n                <div className=\"col-lg-3\">\n                    <p>Avg submissions: {avgAttempts}</p>\n                </div>\n                <div className=\"col-lg-3\" style={noEndBorder}>\n                    <p>At 1st submission: {onOneSubmission}</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-3\">\n                    <p>Total Contests: {totalContests}</p>\n                </div>\n                <div className=\"col-lg-3\">\n                    <p>Max Up: {maxUp}</p>\n                </div>\n                <div className=\"col-lg-3\">\n                    <p>Max Down: {maxDown}</p>\n                </div>\n                <div className=\"col-lg-3\" style={noEndBorder}>\n                    <p>Best Rank: {bestRank}</p>\n                </div>\n            </div>\n        </div>\n    );\n\n\n\n}\n\nexport default UserData;","/home/rohan/Desktop/cf/src/components/HeatMap.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":9},{"ruleId":"118","severity":1,"message":"122","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":20},{"ruleId":"118","severity":1,"message":"123","line":147,"column":12,"nodeType":"120","messageId":"121","endLine":147,"endColumn":28},{"ruleId":"118","severity":1,"message":"124","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"125","line":2,"column":18,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"126","line":2,"column":25,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"127","line":2,"column":32,"nodeType":"120","messageId":"121","endLine":2,"endColumn":49},{"ruleId":"118","severity":1,"message":"128","line":2,"column":51,"nodeType":"120","messageId":"121","endLine":2,"endColumn":68},{"ruleId":"118","severity":1,"message":"129","line":2,"column":70,"nodeType":"120","messageId":"121","endLine":2,"endColumn":89},{"ruleId":"118","severity":1,"message":"130","line":2,"column":91,"nodeType":"120","messageId":"121","endLine":2,"endColumn":101},{"ruleId":"118","severity":1,"message":"131","line":2,"column":103,"nodeType":"120","messageId":"121","endLine":2,"endColumn":113},{"ruleId":"118","severity":1,"message":"132","line":2,"column":115,"nodeType":"120","messageId":"121","endLine":2,"endColumn":129},{"ruleId":"118","severity":1,"message":"133","line":2,"column":131,"nodeType":"120","messageId":"121","endLine":2,"endColumn":148},{"ruleId":"118","severity":1,"message":"134","line":2,"column":150,"nodeType":"120","messageId":"121","endLine":2,"endColumn":169},{"ruleId":"135","severity":1,"message":"136","line":11,"column":40,"nodeType":"137","messageId":"138","endLine":11,"endColumn":49},{"ruleId":"118","severity":1,"message":"124","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"125","line":2,"column":18,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"118","severity":1,"message":"126","line":2,"column":25,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"127","line":2,"column":32,"nodeType":"120","messageId":"121","endLine":2,"endColumn":49},{"ruleId":"118","severity":1,"message":"128","line":2,"column":51,"nodeType":"120","messageId":"121","endLine":2,"endColumn":68},{"ruleId":"118","severity":1,"message":"129","line":2,"column":70,"nodeType":"120","messageId":"121","endLine":2,"endColumn":89},{"ruleId":"118","severity":1,"message":"130","line":2,"column":91,"nodeType":"120","messageId":"121","endLine":2,"endColumn":101},{"ruleId":"118","severity":1,"message":"131","line":2,"column":103,"nodeType":"120","messageId":"121","endLine":2,"endColumn":113},{"ruleId":"118","severity":1,"message":"132","line":2,"column":115,"nodeType":"120","messageId":"121","endLine":2,"endColumn":129},{"ruleId":"118","severity":1,"message":"133","line":2,"column":131,"nodeType":"120","messageId":"121","endLine":2,"endColumn":148},{"ruleId":"118","severity":1,"message":"134","line":2,"column":150,"nodeType":"120","messageId":"121","endLine":2,"endColumn":169},{"ruleId":"135","severity":1,"message":"136","line":11,"column":46,"nodeType":"137","messageId":"138","endLine":11,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":10,"column":40,"nodeType":"137","messageId":"138","endLine":10,"endColumn":49},{"ruleId":"118","severity":1,"message":"139","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":42,"column":44,"nodeType":"137","messageId":"138","endLine":42,"endColumn":53},{"ruleId":"118","severity":1,"message":"124","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"140","line":24,"column":10,"nodeType":"120","messageId":"121","endLine":24,"endColumn":19},{"ruleId":"141","severity":2,"message":"142","line":3,"column":13,"nodeType":"120","messageId":"143","endLine":3,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":3,"column":40,"nodeType":"137","messageId":"138","endLine":3,"endColumn":49},{"ruleId":"141","severity":2,"message":"142","line":5,"column":39,"nodeType":"120","messageId":"143","endLine":5,"endColumn":44},{"ruleId":"141","severity":2,"message":"144","line":21,"column":21,"nodeType":"120","messageId":"143","endLine":21,"endColumn":34},{"ruleId":"141","severity":2,"message":"145","line":22,"column":21,"nodeType":"120","messageId":"143","endLine":22,"endColumn":38},{"ruleId":"141","severity":2,"message":"145","line":25,"column":21,"nodeType":"120","messageId":"143","endLine":25,"endColumn":38},{"ruleId":"141","severity":2,"message":"146","line":26,"column":21,"nodeType":"120","messageId":"143","endLine":26,"endColumn":29},{"ruleId":"114","replacedBy":"147"},{"ruleId":"116","replacedBy":"148"},{"ruleId":"118","severity":1,"message":"149","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":32},{"ruleId":"118","severity":1,"message":"150","line":6,"column":10,"nodeType":"120","messageId":"121","endLine":6,"endColumn":22},{"ruleId":"118","severity":1,"message":"151","line":23,"column":10,"nodeType":"120","messageId":"121","endLine":23,"endColumn":20},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'LanguageWise' is defined but never used.","'problemLanguages' is assigned a value but never used.","'XYPlot' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'makeWidthFlexible' is defined but never used.","'VerticalGridLines' is defined but never used.","'HorizontalGridLines' is defined but never used.","'LineSeries' is defined but never used.","'MarkSeries' is defined but never used.","'LineMarkSeries' is defined but never used.","'VerticalBarSeries' is defined but never used.","'HorizontalBarSeries' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'swap' is defined but never used.","'maxRating' is assigned a value but never used.","no-undef","'props' is not defined.","undef","'setUserRating' is not defined.","'setIsLoadedRating' is not defined.","'setError' is not defined.",["152"],["153"],"'unmountComponentAtNode' is defined but never used.","'sortOnValues' is defined but never used.","'sortOnKeys' is defined but never used.","no-global-assign","no-unsafe-negation"]